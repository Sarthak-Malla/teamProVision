<h1 class="page-heading">Create Your Project</h1>

<form method="POST" id="projectForm">
    Name: <input type="text" name="projectName" required />
    Description: <textarea name="projectDescription" required ></textarea>
    Started Date: <input type="date" name="projectStartDate" required />
    Due Date: <input type="date" name="projectDueDate" />
    <div id="memberContainer">
        <!-- Existing members will be displayed here -->
        Members: 
    </div>
    <input type="text" name="" id="memberInput" placeholder="Add members" onkeydown="handlememberInput(event)">

    <input type="submit" value="Create" />
</form>

<script>
    // select the member container and input
    const memberContainer = document.getElementById('memberContainer');
    const memberInput = document.getElementById('memberInput');
    const projectForm = document.getElementById('projectForm');

    // add event listener to the form
    projectForm.addEventListener('submit', (event) => {
        // prevent the form from submitting
        event.preventDefault();

        // get the members
        const members = Array.from(memberContainer.getElementsByClassName('member-text'))
                            .map(member => member.textContent);

        // create a hidden input
        const memberInput = document.createElement('input');
        memberInput.type = 'hidden';
        memberInput.name = 'projectMembers';
        memberInput.value = members.join(',');

        // append the input to the form
        projectForm.appendChild(memberInput);

        // submit the form
        projectForm.submit();
    });

    // add event listener to the input
    function handlememberInput(event) {
        // check if the user pressed enter or comma
        if (event.key === 'Enter' || event.key === ',') {
            event.preventDefault();
            const member = memberInput.value.trim();

            // check if the member is empty
            if (member) {
                addmember(member);
            }

            memberInput.value = '';
        }
    }

    // add member to the container
    function addmember(member) {
        const memberElement = document.createElement('div');
        memberElement.className = 'member';

        const memberText = document.createElement('span');
        memberText.className = 'member-text';
        memberText.textContent = member;

        const removeButton = document.createElement('button');
        removeButton.className = 'remove';
        removeButton.innerHTML = '❌';
        removeButton.addEventListener('click', () => {
            memberElement.remove();
        });

        memberElement.appendChild(memberText);
        memberElement.appendChild(removeButton);
        memberContainer.appendChild(memberElement);
    }
</script>